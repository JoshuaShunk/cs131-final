{"ast":null,"code":"var _jsxFileName = \"/Users/joshuashunk/Documents/cs131-nerf/src/utils/ModelContext.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// @ts-nocheck\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { getStadiumModelPath } from './modelLoader';\n\n// Create a context for sharing model loading state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelContext = /*#__PURE__*/createContext({\n  model: null,\n  isLoading: true,\n  error: null\n});\n\n// Provider component that will wrap the application\nexport const ModelProvider = ({\n  children\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n\n  // Load the model once when the provider mounts\n  _s(useEffect(_s(() => {\n    _s();\n    const modelPath = getStadiumModelPath();\n    try {\n      // Preload the model\n      useGLTF.preload(modelPath);\n\n      // Load the model\n      const loadedModel = useGLTF(modelPath);\n      setModel(loadedModel);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error loading stadium model:', err);\n      setError(err);\n      setIsLoading(false);\n    }\n\n    // Cleanup function\n    return () => {\n      useGLTF.dispose(modelPath);\n    };\n  }, \"t44RiWpd4pf+mbHhF5ae0g+XZqk=\", false, function () {\n    return [useGLTF];\n  }), []), \"t44RiWpd4pf+mbHhF5ae0g+XZqk=\", false, function () {\n    return [useGLTF];\n  });\n\n  // Value to be provided to consumers\n  const value = {\n    model,\n    isLoading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(ModelContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for consuming the context\n_s2(ModelProvider, \"VjH7Qwq7YXjAdXJGV6jg0uEw+rY=\");\n_c = ModelProvider;\nexport const useModel = () => {\n  _s3();\n  const context = useContext(ModelContext);\n  if (!context) {\n    throw new Error('useModel must be used within a ModelProvider');\n  }\n  return context;\n};\n_s3(useModel, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ModelContext;\nvar _c;\n$RefreshReg$(_c, \"ModelProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useGLTF","getStadiumModelPath","jsxDEV","_jsxDEV","ModelContext","model","isLoading","error","ModelProvider","children","_s2","_s","$RefreshSig$","setIsLoading","setError","setModel","modelPath","preload","loadedModel","err","console","dispose","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useModel","_s3","context","Error","$RefreshReg$"],"sources":["/Users/joshuashunk/Documents/cs131-nerf/src/utils/ModelContext.js"],"sourcesContent":["// @ts-nocheck\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { getStadiumModelPath } from './modelLoader';\n\n// Create a context for sharing model loading state\nconst ModelContext = createContext({\n  model: null,\n  isLoading: true,\n  error: null,\n});\n\n// Provider component that will wrap the application\nexport const ModelProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n  \n  // Load the model once when the provider mounts\n  useEffect(() => {\n    const modelPath = getStadiumModelPath();\n    \n    try {\n      // Preload the model\n      useGLTF.preload(modelPath);\n      \n      // Load the model\n      const loadedModel = useGLTF(modelPath);\n      setModel(loadedModel);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error loading stadium model:', err);\n      setError(err);\n      setIsLoading(false);\n    }\n    \n    // Cleanup function\n    return () => {\n      useGLTF.dispose(modelPath);\n    };\n  }, []);\n  \n  // Value to be provided to consumers\n  const value = {\n    model,\n    isLoading,\n    error,\n  };\n  \n  return (\n    <ModelContext.Provider value={value}>\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\n// Custom hook for consuming the context\nexport const useModel = () => {\n  const context = useContext(ModelContext);\n  if (!context) {\n    throw new Error('useModel must be used within a ModelProvider');\n  }\n  return context;\n};\n\nexport default ModelContext; "],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,mBAAmB,QAAQ,eAAe;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGR,aAAa,CAAC;EACjCS,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE;AACT,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC7C,MAAM,CAACN,SAAS,EAAEO,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEO,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEU,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAc,EAAA,CAAAZ,SAAS,CAAAY,EAAA,CAAC,MAAM;IAAAA,EAAA;IACd,MAAMK,SAAS,GAAGf,mBAAmB,CAAC,CAAC;IAEvC,IAAI;MACF;MACAD,OAAO,CAACiB,OAAO,CAACD,SAAS,CAAC;;MAE1B;MACA,MAAME,WAAW,GAAGlB,OAAO,CAACgB,SAAS,CAAC;MACtCD,QAAQ,CAACG,WAAW,CAAC;MACrBL,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACb,KAAK,CAAC,8BAA8B,EAAEY,GAAG,CAAC;MAClDL,QAAQ,CAACK,GAAG,CAAC;MACbN,YAAY,CAAC,KAAK,CAAC;IACrB;;IAEA;IACA,OAAO,MAAM;MACXb,OAAO,CAACqB,OAAO,CAACL,SAAS,CAAC;IAC5B,CAAC;EACH,CAAC;IAAA,QAbuBhB,OAAO;EAAA,IAa5B,EAAE,CAAC;IAAA,QAbkBA,OAAO;EAAA;;EAe/B;EACA,MAAMsB,KAAK,GAAG;IACZjB,KAAK;IACLC,SAAS;IACTC;EACF,CAAC;EAED,oBACEJ,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAb,QAAA,EACjCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAjB,GAAA,CA3CaF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA4C1B,OAAO,MAAMqB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGjC,UAAU,CAACM,YAAY,CAAC;EACxC,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAQrB,eAAezB,YAAY;AAAC,IAAAwB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}