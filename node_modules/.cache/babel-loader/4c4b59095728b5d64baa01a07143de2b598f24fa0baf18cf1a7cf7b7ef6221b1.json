{"ast":null,"code":"var _jsxFileName = \"/Users/joshuashunk/Documents/cs131-nerf/src/utils/ModelContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// @ts-nocheck\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { getStadiumModelPath } from './modelLoader';\n\n// Create a context for sharing model loading state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelContext = /*#__PURE__*/createContext({\n  model: null,\n  isLoading: true,\n  error: null\n});\n\n// Provider component that will wrap the application\nexport const ModelProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Get the stadium model path\n  const modelPath = getStadiumModelPath();\n\n  // Use the useGLTF hook within the component's render function\n  let model;\n  try {\n    model = useGLTF(modelPath);\n  } catch (err) {\n    console.error('Error loading stadium model:', err);\n    if (!error) {\n      setError(err);\n    }\n  }\n\n  // Update loading state when model is loaded\n  useEffect(() => {\n    if (model && isLoading) {\n      setIsLoading(false);\n    }\n  }, [model, isLoading]);\n\n  // Preload the model\n  useEffect(() => {\n    try {\n      useGLTF.preload(modelPath);\n    } catch (err) {\n      console.error('Error preloading stadium model:', err);\n      if (!error) {\n        setError(err);\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      try {\n        useGLTF.dispose(modelPath);\n      } catch (err) {\n        console.error('Error disposing stadium model:', err);\n      }\n    };\n  }, [modelPath, error]);\n\n  // Value to be provided to consumers\n  const value = {\n    model,\n    isLoading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(ModelContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for consuming the context\n_s(ModelProvider, \"XPs6ip9Knl9tFvlCvvB3rHpDygg=\", false, function () {\n  return [useGLTF];\n});\n_c = ModelProvider;\nexport const useModel = () => {\n  _s2();\n  const context = useContext(ModelContext);\n  if (!context) {\n    throw new Error('useModel must be used within a ModelProvider');\n  }\n  return context;\n};\n_s2(useModel, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ModelContext;\nvar _c;\n$RefreshReg$(_c, \"ModelProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useGLTF","getStadiumModelPath","jsxDEV","_jsxDEV","ModelContext","model","isLoading","error","ModelProvider","children","_s","setIsLoading","setError","modelPath","err","console","preload","dispose","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useModel","_s2","context","Error","$RefreshReg$"],"sources":["/Users/joshuashunk/Documents/cs131-nerf/src/utils/ModelContext.js"],"sourcesContent":["// @ts-nocheck\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { getStadiumModelPath } from './modelLoader';\n\n// Create a context for sharing model loading state\nconst ModelContext = createContext({\n  model: null,\n  isLoading: true,\n  error: null,\n});\n\n// Provider component that will wrap the application\nexport const ModelProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Get the stadium model path\n  const modelPath = getStadiumModelPath();\n  \n  // Use the useGLTF hook within the component's render function\n  let model;\n  try {\n    model = useGLTF(modelPath);\n  } catch (err) {\n    console.error('Error loading stadium model:', err);\n    if (!error) {\n      setError(err);\n    }\n  }\n  \n  // Update loading state when model is loaded\n  useEffect(() => {\n    if (model && isLoading) {\n      setIsLoading(false);\n    }\n  }, [model, isLoading]);\n  \n  // Preload the model\n  useEffect(() => {\n    try {\n      useGLTF.preload(modelPath);\n    } catch (err) {\n      console.error('Error preloading stadium model:', err);\n      if (!error) {\n        setError(err);\n      }\n    }\n    \n    // Cleanup function\n    return () => {\n      try {\n        useGLTF.dispose(modelPath);\n      } catch (err) {\n        console.error('Error disposing stadium model:', err);\n      }\n    };\n  }, [modelPath, error]);\n  \n  // Value to be provided to consumers\n  const value = {\n    model,\n    isLoading,\n    error,\n  };\n  \n  return (\n    <ModelContext.Provider value={value}>\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\n// Custom hook for consuming the context\nexport const useModel = () => {\n  const context = useContext(ModelContext);\n  if (!context) {\n    throw new Error('useModel must be used within a ModelProvider');\n  }\n  return context;\n};\n\nexport default ModelContext; "],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,mBAAmB,QAAQ,eAAe;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGR,aAAa,CAAC;EACjCS,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE;AACT,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACJ,SAAS,EAAEK,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEK,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,SAAS,GAAGZ,mBAAmB,CAAC,CAAC;;EAEvC;EACA,IAAII,KAAK;EACT,IAAI;IACFA,KAAK,GAAGL,OAAO,CAACa,SAAS,CAAC;EAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACR,KAAK,CAAC,8BAA8B,EAAEO,GAAG,CAAC;IAClD,IAAI,CAACP,KAAK,EAAE;MACVK,QAAQ,CAACE,GAAG,CAAC;IACf;EACF;;EAEA;EACAf,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,IAAIC,SAAS,EAAE;MACtBK,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACN,KAAK,EAAEC,SAAS,CAAC,CAAC;;EAEtB;EACAP,SAAS,CAAC,MAAM;IACd,IAAI;MACFC,OAAO,CAACgB,OAAO,CAACH,SAAS,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACR,KAAK,CAAC,iCAAiC,EAAEO,GAAG,CAAC;MACrD,IAAI,CAACP,KAAK,EAAE;QACVK,QAAQ,CAACE,GAAG,CAAC;MACf;IACF;;IAEA;IACA,OAAO,MAAM;MACX,IAAI;QACFd,OAAO,CAACiB,OAAO,CAACJ,SAAS,CAAC;MAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACR,KAAK,CAAC,gCAAgC,EAAEO,GAAG,CAAC;MACtD;IACF,CAAC;EACH,CAAC,EAAE,CAACD,SAAS,EAAEN,KAAK,CAAC,CAAC;;EAEtB;EACA,MAAMW,KAAK,GAAG;IACZb,KAAK;IACLC,SAAS;IACTC;EACF,CAAC;EAED,oBACEJ,OAAA,CAACC,YAAY,CAACe,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAT,QAAA,EACjCA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAb,EAAA,CA5DaF,aAAa;EAAA,QAUdR,OAAO;AAAA;AAAAwB,EAAA,GAVNhB,aAAa;AA6D1B,OAAO,MAAMiB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAG7B,UAAU,CAACM,YAAY,CAAC;EACxC,IAAI,CAACuB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAQrB,eAAerB,YAAY;AAAC,IAAAoB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}