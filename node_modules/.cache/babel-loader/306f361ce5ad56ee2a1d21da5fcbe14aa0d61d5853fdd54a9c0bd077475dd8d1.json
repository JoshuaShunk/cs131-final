{"ast":null,"code":"import { useGLTF } from '@react-three/drei';\n\n// Stadium model path\nconst STADIUM_MODEL_PATH = '/models/new_stadium.glb';\n\n// Preload the stadium model to improve performance\nexport const preloadModels = () => {\n  console.log('Preloading model from path:', STADIUM_MODEL_PATH);\n\n  // Check if the model file exists before preloading\n  fetch(STADIUM_MODEL_PATH).then(response => {\n    if (!response.ok) {\n      console.error(`Model file not found at ${STADIUM_MODEL_PATH}. Status: ${response.status}`);\n      return;\n    }\n\n    // Only preload if the file exists\n    console.log('Model file exists, preloading...');\n    useGLTF.preload(STADIUM_MODEL_PATH);\n    console.log('Model preloaded successfully');\n  }).catch(error => {\n    console.error('Error checking model file:', error);\n  });\n};\n\n// Helper function to position the camera at a specific seat\nexport const positionCameraAtSeat = (camera, seatCoordinates) => {\n  if (!camera || !seatCoordinates) return;\n\n  // Set camera position to the seat coordinates\n  camera.position.set(seatCoordinates.x || 0, seatCoordinates.y || 2, seatCoordinates.z || 10);\n\n  // You can also set the camera's lookAt target\n  // For example, to look at the center of the stadium\n  camera.lookAt(0, 0, 0);\n};\n\n// Helper function to convert Blender coordinates to Three.js coordinates\n// Blender uses Z-up, while Three.js uses Y-up\nexport const convertBlenderToThreeCoordinates = blenderCoords => {\n  return {\n    x: blenderCoords.x,\n    y: blenderCoords.z,\n    // Blender Z becomes Three.js Y\n    z: -blenderCoords.y // Blender Y becomes negative Three.js Z\n  };\n};\n\n// Helper function to handle model loading errors\nexport const handleModelError = error => {\n  console.error('Error loading model:', error);\n  return {\n    error: true,\n    message: 'Failed to load the 3D model. Please try again later.'\n  };\n};\n\n// Get the stadium model path - now we only use one model for all seats\nexport const getStadiumModelPath = () => {\n  return STADIUM_MODEL_PATH;\n};\nexport default {\n  preloadModels,\n  positionCameraAtSeat,\n  convertBlenderToThreeCoordinates,\n  handleModelError,\n  getStadiumModelPath\n};","map":{"version":3,"names":["useGLTF","STADIUM_MODEL_PATH","preloadModels","console","log","fetch","then","response","ok","error","status","preload","catch","positionCameraAtSeat","camera","seatCoordinates","position","set","x","y","z","lookAt","convertBlenderToThreeCoordinates","blenderCoords","handleModelError","message","getStadiumModelPath"],"sources":["/Users/joshuashunk/Documents/cs131-nerf/src/utils/modelLoader.js"],"sourcesContent":["import { useGLTF } from '@react-three/drei';\n\n// Stadium model path\nconst STADIUM_MODEL_PATH = '/models/new_stadium.glb';\n\n// Preload the stadium model to improve performance\nexport const preloadModels = () => {\n  console.log('Preloading model from path:', STADIUM_MODEL_PATH);\n  \n  // Check if the model file exists before preloading\n  fetch(STADIUM_MODEL_PATH)\n    .then(response => {\n      if (!response.ok) {\n        console.error(`Model file not found at ${STADIUM_MODEL_PATH}. Status: ${response.status}`);\n        return;\n      }\n      \n      // Only preload if the file exists\n      console.log('Model file exists, preloading...');\n      useGLTF.preload(STADIUM_MODEL_PATH);\n      console.log('Model preloaded successfully');\n    })\n    .catch(error => {\n      console.error('Error checking model file:', error);\n    });\n};\n\n// Helper function to position the camera at a specific seat\nexport const positionCameraAtSeat = (camera, seatCoordinates) => {\n  if (!camera || !seatCoordinates) return;\n  \n  // Set camera position to the seat coordinates\n  camera.position.set(\n    seatCoordinates.x || 0,\n    seatCoordinates.y || 2,\n    seatCoordinates.z || 10\n  );\n  \n  // You can also set the camera's lookAt target\n  // For example, to look at the center of the stadium\n  camera.lookAt(0, 0, 0);\n};\n\n// Helper function to convert Blender coordinates to Three.js coordinates\n// Blender uses Z-up, while Three.js uses Y-up\nexport const convertBlenderToThreeCoordinates = (blenderCoords) => {\n  return {\n    x: blenderCoords.x,\n    y: blenderCoords.z, // Blender Z becomes Three.js Y\n    z: -blenderCoords.y // Blender Y becomes negative Three.js Z\n  };\n};\n\n// Helper function to handle model loading errors\nexport const handleModelError = (error) => {\n  console.error('Error loading model:', error);\n  return {\n    error: true,\n    message: 'Failed to load the 3D model. Please try again later.'\n  };\n};\n\n// Get the stadium model path - now we only use one model for all seats\nexport const getStadiumModelPath = () => {\n  return STADIUM_MODEL_PATH;\n};\n\nexport default {\n  preloadModels,\n  positionCameraAtSeat,\n  convertBlenderToThreeCoordinates,\n  handleModelError,\n  getStadiumModelPath\n}; "],"mappings":"AAAA,SAASA,OAAO,QAAQ,mBAAmB;;AAE3C;AACA,MAAMC,kBAAkB,GAAG,yBAAyB;;AAEpD;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,kBAAkB,CAAC;;EAE9D;EACAI,KAAK,CAACJ,kBAAkB,CAAC,CACtBK,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChBL,OAAO,CAACM,KAAK,CAAC,2BAA2BR,kBAAkB,aAAaM,QAAQ,CAACG,MAAM,EAAE,CAAC;MAC1F;IACF;;IAEA;IACAP,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/CJ,OAAO,CAACW,OAAO,CAACV,kBAAkB,CAAC;IACnCE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC7C,CAAC,CAAC,CACDQ,KAAK,CAACH,KAAK,IAAI;IACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMI,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,eAAe,KAAK;EAC/D,IAAI,CAACD,MAAM,IAAI,CAACC,eAAe,EAAE;;EAEjC;EACAD,MAAM,CAACE,QAAQ,CAACC,GAAG,CACjBF,eAAe,CAACG,CAAC,IAAI,CAAC,EACtBH,eAAe,CAACI,CAAC,IAAI,CAAC,EACtBJ,eAAe,CAACK,CAAC,IAAI,EACvB,CAAC;;EAED;EACA;EACAN,MAAM,CAACO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACxB,CAAC;;AAED;AACA;AACA,OAAO,MAAMC,gCAAgC,GAAIC,aAAa,IAAK;EACjE,OAAO;IACLL,CAAC,EAAEK,aAAa,CAACL,CAAC;IAClBC,CAAC,EAAEI,aAAa,CAACH,CAAC;IAAE;IACpBA,CAAC,EAAE,CAACG,aAAa,CAACJ,CAAC,CAAC;EACtB,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAIf,KAAK,IAAK;EACzCN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC5C,OAAO;IACLA,KAAK,EAAE,IAAI;IACXgB,OAAO,EAAE;EACX,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACvC,OAAOzB,kBAAkB;AAC3B,CAAC;AAED,eAAe;EACbC,aAAa;EACbW,oBAAoB;EACpBS,gCAAgC;EAChCE,gBAAgB;EAChBE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}